/**
 * Cyclone - Track Component Styles
 * Terminal-styled horizontal track for patterns
 */

.track {
  display: flex;
  position: relative; /* For absolute positioning of resize handle */
  border-bottom: var(--border-width-thin) solid var(--color-grid);
  min-height: 0; /* Override flex default min-height: auto to allow shrinking */
  /* height is set dynamically via inline style based on verticalZoom or custom height */
  transition: transform var(--duration-slow) var(--ease-out), opacity var(--duration-slow) var(--ease-out);
}

.track:last-child {
  border-bottom: none;
}

/* Animation when track is moved - retro terminal flash effect */
@keyframes track-swap {
  0% {
    transform: translateX(0) scaleY(1);
    filter: brightness(1) drop-shadow(0 0 0 color-mix(in srgb, var(--primitive-green-500) 0%, transparent));
  }
  15% {
    transform: translateX(calc(-1 * var(--spacing-sm))) scaleY(0.98);
    filter: brightness(1.5) saturate(1.5) drop-shadow(0 0 var(--glow-intensity-md) color-mix(in srgb, var(--primitive-green-500) 80%, transparent));
  }
  30% {
    transform: translateX(var(--spacing-sm)) scaleY(1.02);
    filter: brightness(1.3) saturate(1.3) drop-shadow(0 0 var(--glow-intensity-sm) color-mix(in srgb, var(--primitive-green-500) 60%, transparent));
  }
  50% {
    transform: translateX(0) scaleY(1);
    filter: brightness(1.2) drop-shadow(0 0 var(--glow-intensity-xs) color-mix(in srgb, var(--primitive-green-500) 40%, transparent));
  }
  100% {
    transform: translateX(0) scaleY(1);
    filter: brightness(1) drop-shadow(0 0 0 color-mix(in srgb, var(--primitive-green-500) 0%, transparent));
  }
}

.moving {
  animation: track-swap var(--duration-slower) cubic-bezier(0.68, -0.55, 0.265, 1.55) !important;
  position: relative;
  background: color-mix(in srgb, var(--color-primary) 15%, transparent) !important;
  outline: var(--border-width-thick) solid color-mix(in srgb, var(--color-primary) 80%, transparent) !important;
  outline-offset: calc(-1 * var(--spacing-xs));
}

/* Current track (for keyboard navigation) */
.current {
  box-shadow: inset var(--spacing-xs) 0 0 var(--color-primary);
}

.current .header {
  background: color-mix(in srgb, var(--color-primary) 5%, transparent);
}

.current .content {
  background: color-mix(in srgb, var(--color-primary) 2%, transparent);
}

/* Track Header (Name) */
.header {
  width: 200px;
  padding: var(--spacing-md); /* Overridden by inline style for dynamic scaling */
  background: var(--color-bg);
  border-right: var(--border-width-base) solid var(--color-secondary);
  display: flex;
  align-items: center;
  gap: var(--spacing-xs);
  flex-shrink: 0;
  min-height: 0; /* Allow shrinking below content size */
  overflow: hidden; /* Clip content when track shrinks */
}

/* Current track indicator */
.currentIndicator {
  font-family: var(--font-primary);
  font-size: var(--font-size-lg);
  color: var(--color-primary);
  font-weight: bold;
  text-shadow: var(--phosphor-glow-md);
  animation: pulse-indicator 1.5s ease-in-out infinite;
}

@keyframes pulse-indicator {
  0%, 100% {
    opacity: var(--opacity-full);
    text-shadow: var(--phosphor-glow-md);
  }
  50% {
    opacity: var(--opacity-semi);
    text-shadow: var(--phosphor-glow-sm);
  }
}

/* Color swatch button */
.colorSwatch {
  background: transparent;
  border: none;
  cursor: pointer;
  padding: 0;
  font-family: var(--font-primary);
  font-size: var(--font-size-lg);
  line-height: 1;
  transition: filter var(--transition-fast);
}

.colorSwatch:hover {
  filter: brightness(1.3) drop-shadow(0 0 var(--glow-intensity-sm) currentColor);
}

.name {
  font-family: var(--font-primary);
  font-size: var(--font-size-base);
  color: var(--color-primary);
  cursor: pointer;
  user-select: none;
  transition: color var(--transition-fast);
}

.name:hover {
  color: var(--color-highlight);
  text-shadow: var(--phosphor-glow-sm);
}

.nameInput {
  width: 100%;
  background: var(--color-bg-elevated);
  border: var(--border-width-thin) solid var(--color-primary);
  color: var(--color-primary);
  font-family: var(--font-primary);
  font-size: var(--font-size-base);
  padding: var(--spacing-xs);
  outline: none;
}

.nameInput:focus {
  border-color: var(--color-highlight);
  box-shadow: var(--phosphor-glow-sm);
}

/* Track Content (Patterns Area) */
.content {
  flex: 1;
  position: relative;
  background: var(--color-bg);
  min-width: 0;
  cursor: crosshair;
  overflow: visible !important; /* Allow overflow for dragging patterns between tracks. CSS spec: can't have one axis hidden and other visible, browser converts to auto */
  clip-path: inset(-9999px -9999px -9999px 0); /* Clip left edge to prevent overflow into track header, allow overflow on top/bottom/right for pattern dragging */
  transition: background-color var(--transition-fast);
}

.content:hover {
  background: color-mix(in srgb, var(--color-primary) 3%, var(--color-bg)); /* Subtle highlight on hover */
}

/* Grid canvas for dynamic grid lines */
.grid {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: 0;
}

/* Ghost pattern preview during drag-to-create */
.ghostPattern {
  background: color-mix(in srgb, var(--color-primary) 15%, transparent);
  border: var(--border-width-thin) dashed var(--color-primary);
  box-shadow:
    inset 0 0 var(--glow-intensity-md) color-mix(in srgb, var(--color-primary) 20%, transparent),
    0 0 var(--glow-intensity-sm) color-mix(in srgb, var(--color-primary) 30%, transparent);
  z-index: var(--z-controls);
  animation: ghost-pulse 800ms ease-in-out infinite;
}

@keyframes ghost-pulse {
  0%, 100% {
    opacity: var(--opacity-semi);
    box-shadow:
      inset 0 0 var(--glow-intensity-md) color-mix(in srgb, var(--color-primary) 20%, transparent),
      0 0 var(--glow-intensity-sm) color-mix(in srgb, var(--color-primary) 30%, transparent);
  }
  50% {
    opacity: 0.8;
    box-shadow:
      inset 0 0 var(--glow-intensity-lg) color-mix(in srgb, var(--color-primary) 30%, transparent),
      0 0 var(--glow-intensity-md) color-mix(in srgb, var(--color-primary) 50%, transparent);
  }
}

/* Respect reduced motion preference */
@media (prefers-reduced-motion: reduce) {
  .name {
    transition: none;
  }

  .ghostPattern {
    animation: none;
    opacity: var(--opacity-semi);
  }
}

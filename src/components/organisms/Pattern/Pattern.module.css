/**
 * Cyclone - Pattern Component Styles
 * Terminal-styled pattern with drag and resize functionality
 */

.pattern {
  position: absolute;
  /* Stretch to fill track height with minimal margin (works even at small zoom) */
  top: 2px;
  bottom: 2px;
  background: var(--color-bg-elevated);
  border: var(--border-width-base) solid var(--pattern-color, var(--color-secondary));
  cursor: pointer;
  user-select: none;
  /* Include borders in width calculation for precise alignment */
  box-sizing: border-box;
  /* Smooth transitions for all state changes */
  transition:
    border-color var(--transition-base),
    box-shadow var(--transition-base),
    background-color var(--transition-base),
    opacity var(--transition-fast);
  display: flex;
  align-items: stretch;
}

/* Background tint using the track color */
.pattern[style*="--pattern-color"]::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: var(--pattern-color);
  opacity: 0.1;
  pointer-events: none;
}

/* Hover state - brighten slightly with glow increase */
.pattern:hover {
  border-color: var(--pattern-color, var(--color-primary));
  background: #001a00; /* Slightly brighter than bg-elevated */
  box-shadow: var(--phosphor-glow-md);
}

/* Selected state with phosphor persistence fade-in and pulsing */
.selected {
  border-color: var(--color-highlight);
  border-width: 2px;
  box-shadow:
    0 0 4px rgba(0, 255, 0, 1),
    0 0 8px rgba(0, 255, 0, 0.8),
    0 0 16px rgba(0, 255, 0, 0.6),
    inset 0 0 8px rgba(0, 255, 0, 0.4);
  z-index: var(--z-controls);
  background: #002200;
  /* Phosphor persistence: fade-in glow effect on selection (200-300ms) */
  transition:
    box-shadow 250ms ease-out,
    border-color 250ms ease-out,
    background-color 250ms ease-out,
    border-width 250ms ease-out;
  animation: pattern-select-glow 300ms ease-out, pattern-pulse 2s ease-in-out infinite;
  animation-delay: 0s, 300ms; /* Start pulse after initial glow completes */
}

/* Phosphor persistence fade-in animation for selection */
@keyframes pattern-select-glow {
  0% {
    box-shadow: 0 0 2px rgba(0, 255, 0, 0.5);
    border-color: var(--color-secondary);
    border-width: 1px;
    background: var(--color-bg-elevated);
  }
  100% {
    box-shadow:
      0 0 4px rgba(0, 255, 0, 1),
      0 0 8px rgba(0, 255, 0, 0.8),
      0 0 16px rgba(0, 255, 0, 0.6),
      inset 0 0 8px rgba(0, 255, 0, 0.4);
    border-color: var(--color-highlight);
    border-width: 2px;
    background: #002200;
  }
}

/* Stronger pulse animation for selected patterns */
@keyframes pattern-pulse {
  0%, 100% {
    box-shadow:
      0 0 4px rgba(0, 255, 0, 1),
      0 0 8px rgba(0, 255, 0, 0.8),
      0 0 16px rgba(0, 255, 0, 0.6),
      inset 0 0 8px rgba(0, 255, 0, 0.4);
    border-color: var(--color-highlight);
    background: #002200;
  }
  50% {
    box-shadow:
      0 0 6px rgba(102, 255, 102, 1),
      0 0 12px rgba(102, 255, 102, 0.9),
      0 0 24px rgba(102, 255, 102, 0.7),
      inset 0 0 12px rgba(102, 255, 102, 0.5);
    border-color: #ccffcc;
    background: #003300;
    filter: brightness(1.2);
  }
}

/* Hover on selected patterns - enhance glow further */
.selected:hover {
  box-shadow:
    0 0 6px rgba(102, 255, 102, 1),
    0 0 14px rgba(102, 255, 102, 0.95),
    0 0 28px rgba(102, 255, 102, 0.8),
    inset 0 0 16px rgba(102, 255, 102, 0.6);
  background: #003300;
  border-color: #ffffff;
}

.selected .corner {
  color: var(--color-highlight);
  text-shadow: var(--phosphor-glow-lg);
}

.dragging,
.resizing {
  opacity: 0.8;
  cursor: grabbing;
  z-index: var(--z-tooltip); /* Ensure dragging patterns are above everything */
}

.copying {
  box-shadow: var(--phosphor-glow-lg);
  animation: pattern-copying-pulse 400ms ease-in-out infinite;
}

@keyframes pattern-copying-pulse {
  0%, 100% {
    border-color: var(--color-highlight);
  }
  50% {
    border-color: var(--color-primary);
  }
}

/* Pattern Content */
.content {
  flex: 1;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  padding: var(--spacing-xs);
  cursor: grab;
  position: relative;
  overflow: hidden;
  box-sizing: border-box;
}

.dragging .content {
  cursor: grabbing;
}

/* ASCII Corner Characters */
.corners {
  display: flex;
  justify-content: space-between;
  font-family: var(--font-primary);
  font-size: var(--font-size-base);
  color: var(--color-secondary);
  line-height: 1;
}

.selected .corners {
  color: var(--color-highlight);
}

.cornersBottom {
  margin-top: auto;
}

.corner {
  display: inline-block;
  pointer-events: none;
  transition:
    color var(--transition-base),
    text-shadow var(--transition-base);
}

/* Pattern Label */
.label {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  font-family: var(--font-primary);
  font-size: var(--font-size-sm);
  color: var(--color-primary);
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  max-width: calc(100% - var(--spacing-md));
  pointer-events: none;
  /* Add solid background for readability on striped patterns */
  background: var(--color-bg-elevated);
  padding: 2px 6px;
  border-radius: 2px;
  transition:
    color var(--transition-base),
    text-shadow var(--transition-base);
}

.selected .label {
  color: var(--color-highlight);
  text-shadow: var(--phosphor-glow-sm);
}

/* Pattern Label Input */
.labelInput {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: calc(100% - var(--spacing-md));
  font-family: var(--font-primary);
  font-size: var(--font-size-sm);
  color: var(--color-primary);
  background: var(--color-bg);
  border: 1px solid var(--color-primary);
  padding: var(--spacing-xs);
  text-align: center;
  z-index: 10;
}

.labelInput:focus {
  outline: none;
  border-color: var(--color-highlight);
  box-shadow: var(--phosphor-glow-sm);
}

/* Resize Handles */
.handle {
  /* Dynamic width: larger patterns get wider handles, small patterns get minimal handles */
  width: min(16px, max(4px, 20%));
  cursor: ew-resize;
  background: transparent;
  position: relative;
  flex-shrink: 0;
  transition:
    background-color var(--transition-fast),
    opacity var(--transition-fast);
}

/* Extended hit area using pseudo-element for better grab at all sizes */
.handle::before {
  content: '';
  position: absolute;
  top: -4px;
  bottom: -4px;
  /* Extend hit area outward by 8px for easier grabbing */
  width: calc(100% + 16px);
  cursor: inherit;
}

.handleLeft::before {
  left: -8px;
  right: 0;
}

.handleRight::before {
  left: 0;
  right: -8px;
}

.handle:hover {
  background: var(--color-primary);
  opacity: 0.5;
}

.handleLeft {
  left: 0;
  cursor: w-resize;
}

.handleRight {
  right: 0;
  cursor: e-resize;
}

/* Muted pattern state - reduced opacity with diagonal stripes */
.muted {
  opacity: 0.5;
  background-image: repeating-linear-gradient(
    45deg,
    transparent,
    transparent 5px,
    rgba(0, 255, 0, 0.1) 5px,
    rgba(0, 255, 0, 0.1) 10px
  );
}

/* Pattern type badge (P3 or CK) */
.typeBadge {
  position: absolute;
  top: 2px;
  right: 2px;
  font-size: 10px;
  padding: 2px 4px;
  background: rgba(0, 0, 0, 0.7);
  color: var(--color-primary);
  border: 1px solid var(--color-primary);
  font-family: var(--font-primary);
  line-height: 1;
  pointer-events: none;
  z-index: 10;
  transition: color var(--transition-base), border-color var(--transition-base);
}

.selected .typeBadge {
  color: var(--color-highlight);
  border-color: var(--color-highlight);
}

/* Phosphor burn-in animation for newly created patterns */
@keyframes pattern-burn-in {
  0% {
    opacity: 0;
    box-shadow: var(--phosphor-glow-xl);
    border-color: var(--color-highlight);
    transform: scale(1.05);
  }
  30% {
    opacity: 1;
    box-shadow: var(--phosphor-glow-xl);
    border-color: var(--color-highlight);
  }
  100% {
    opacity: 1;
    box-shadow: var(--phosphor-glow-sm);
    border-color: var(--color-secondary);
    transform: scale(1);
  }
}

.new {
  animation: pattern-burn-in 400ms ease-out;
}

/* Pattern Loop Visualization - Shows the full scene duration with looped portion */
.loopFill {
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  background: var(--color-bg-elevated);
  /* Diagonal stripes pattern for looped portion - uses track color */
  background-image: repeating-linear-gradient(
    45deg,
    transparent,
    transparent 3px,
    color-mix(in srgb, var(--pattern-color, var(--color-secondary)) 15%, transparent) 3px,
    color-mix(in srgb, var(--pattern-color, var(--color-secondary)) 15%, transparent) 6px
  );
  pointer-events: none;
  z-index: 0;
}

/* When pattern is looping, ensure content sits on top */
.looping .content {
  position: relative;
  z-index: 1;
}

/* Ensure handles are visible on looping patterns */
.looping .handle {
  position: relative;
  z-index: 2;
}

/* Respect reduced motion preference */
@media (prefers-reduced-motion: reduce) {
  .pattern,
  .selected,
  .handle {
    transition: none;
    animation: none;
  }

  .new {
    animation: none;
    opacity: 1;
  }

  .selected {
    /* Keep selection visible but remove animations */
    animation: none;
    box-shadow: var(--box-glow-xl);
  }

  @keyframes pattern-select-glow {
    0%, 100% {
      box-shadow: var(--box-glow-lg);
      border-color: var(--color-highlight);
    }
  }
}
